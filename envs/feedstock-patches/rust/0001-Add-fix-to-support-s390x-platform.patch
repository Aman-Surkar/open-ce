From 57916b8295c43eb7892de5ceff480508b6fca1e9 Mon Sep 17 00:00:00 2001
From: Aman Surkar <Aman.Surkar@ibm.com>
Date: Sun, 24 Nov 2024 17:49:53 +0000
Subject: [PATCH] Add fix to support s390x platform

---
 recipe/conda_build_config.yaml |  1 +
 recipe/install-rust.sh         |  1 +
 recipe/meta.yaml               | 14 ++++++++------
 3 files changed, 10 insertions(+), 6 deletions(-)

diff --git a/recipe/conda_build_config.yaml b/recipe/conda_build_config.yaml
index acee49a..1c780f1 100644
--- a/recipe/conda_build_config.yaml
+++ b/recipe/conda_build_config.yaml
@@ -7,6 +7,7 @@ rust_arch:
   - x86_64-pc-windows-msvc      # [win64]
   - x86_64-apple-darwin         # [osx and x86_64]
   - aarch64-apple-darwin        # [osx and arm64]
+  - s390x-unknown-linux-gnu     # [s390x]
 
 rust_std_extra:
   - aarch64-apple-ios
diff --git a/recipe/install-rust.sh b/recipe/install-rust.sh
index 90f1768..8d684d6 100755
--- a/recipe/install-rust.sh
+++ b/recipe/install-rust.sh
@@ -18,6 +18,7 @@ case "$target_platform" in
     linux-64) rust_env_arch=X86_64_UNKNOWN_LINUX_GNU ;;
     linux-aarch64) rust_env_arch=AARCH64_UNKNOWN_LINUX_GNU ;;
     linux-ppc64le) rust_env_arch=POWERPC64LE_UNKNOWN_LINUX_GNU ;;
+    linux-s390x) rust_env_arch=S390X_UNKNOWN_LINUX_GNU ;;
     win-64) rust_env_arch=X86_64_PC_WINDOWS_MSVC ;;
     osx-64) rust_env_arch=X86_64_APPLE_DARWIN ;;
     osx-arm64) rust_env_arch=AARCH64_APPLE_DARWIN ;;
diff --git a/recipe/meta.yaml b/recipe/meta.yaml
index 3b8a388..59828c1 100644
--- a/recipe/meta.yaml
+++ b/recipe/meta.yaml
@@ -9,6 +9,8 @@ source:
   # well with the autotick bot. Importantly, the `patches:` block actually
   # applies to *all* of these inputs, not just the last one in the list, because
   # of the way that the YAML selector processing works.
+  - url: https://static.rust-lang.org/dist/rust-{{ version }}-s390x-unknown-linux-gnu.tar.gz #[s390x]
+    sha256: e0450ff125cadd3813c7888f5ca42f78e68df13c212b12d5eac3325062632723  #[s390x]
   - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-unknown-linux-gnu.tar.gz  # [linux and x86_64]
     sha256: 4ca7c24e573dae2f382d8d266babfddc307155e1a0a4025f3bc11db58a6cab3e  # [linux and x86_64]
   - url: https://static.rust-lang.org/dist/rust-{{ version }}-aarch64-unknown-linux-gnu.tar.xz  # [aarch64]
@@ -115,23 +117,23 @@ outputs:
         # Added as run deps: libgcc-ng (via compiler strong run_exports), zlib
         # - /lib64/libgcc_s.so.1  # [linux]
         # - /lib64/libz.so.1  # [linux]
-      run_exports:   # [(osx and x86_64) or linux]
-        strong_constrains:   # [(osx and x86_64) or linux]
-          - __osx >={{ c_stdlib_version }}  # [osx and x86_64]
-          - __glibc >={{ c_stdlib_version }}  # [linux]
+#      run_exports:   # [(osx and x86_64) or linux]
+#        strong_constrains:   # [(osx and x86_64) or linux]
+#          - __osx >={{ c_stdlib_version }}  # [osx and x86_64]
+#          - __glibc >={{ c_stdlib_version }}  # [linux]
     requirements:
       build:
         - posix  # [win]
       host:
         - {{ pin_subpackage("rust-std-" ~ rust_arch, exact=True) }}
         - {{ compiler('c') }}  # [linux] -- rustc needs a toolchain to link executables
-        - {{ stdlib('c') }}  # [linux]
+#      - {{ stdlib('c') }}  # [linux]
         # zlib is linked by **/lib/libLLVM-*-rust-*.so
         - zlib  # [linux]
       run:
         - {{ pin_subpackage("rust-std-" ~ rust_arch, exact=True) }}
         - gcc_impl_{{ target_platform }}  # [linux]
-        - sysroot_{{ target_platform }} >={{ c_stdlib_version }}  # [linux]
+#        - sysroot_{{ target_platform }} >={{ c_stdlib_version }}  # [linux]
     test:
       requires:
         - posix  # [win]
-- 
2.40.1

